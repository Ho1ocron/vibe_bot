from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.types import(
    InlineKeyboardButton, 
    InlineKeyboardMarkup,
)
from states import WaitForText

router = Router(name=__name__) 



@router.callback_query(F.data == "achievements")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 1", callback_data="ach1"), 
             InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 2", callback_data="ach2"),
             InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 3", callback_data="ach3")],
             [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="backach")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="üëã <b>–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –î—Ä—É–≥!</b> üëã\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏!\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è –≤–æ—Ç —Å—Ç–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤: 0"
    )

@router.callback_query(F.data == "ach1")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
             [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="backach")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="–û–ø–∏—Å 1"
    )

@router.callback_query(F.data == "ach2")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
             [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="backach")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="–û–ø–∏—Å 2"
    )

@router.callback_query(F.data == "ach3")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
             [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="backach")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="–û–ø–∏—Å 3"
    )

@router.callback_query(F.data == "backach")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
             [InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 1", callback_data="ach1"), 
             InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 2", callback_data="ach2"),
             InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ 3", callback_data="ach3")],
             [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="backmain")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="üëã <b>–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –î—Ä—É–≥!</b> üëã\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏!\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è –≤–æ—Ç —Å—Ç–æ–ª—å–∫–æ –±–∞–ª–ª–æ–≤: 0"
    )

@router.callback_query(F.data == "backmain")
async def where_to_go(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
            InlineKeyboardButton(text="–ö—É–¥–∞ –∏–¥—Ç–∏?", callback_data="go"), 
            InlineKeyboardButton(text="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="achievements")
            ],
            [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
        ]
    )

    await callback.message.edit_text(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard,
        text="üëã <b>–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –î—Ä—É–≥!</b> üëã\n \n –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –Ω–æ–≤–æ–º –∫–∞–º–ø—É—Å–µ –ò–†–ò–¢-–†—Ç–§ –£—Ä–§–£ –≤ –ù–æ–≤–æ–∫–æ–ª—å—Ü–æ–≤—Å–∫–æ–º.\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ: "
    )

@router.callback_query(F.data == "settings")
async def open_settings(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ]
    )
    await callback.message.edit_text("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.", )
    await callback.message.edit_reply_markup(
        inline_message_id=callback.inline_message_id,
        reply_markup=keyboard
    )


@router.callback_query(F.data == "go")
async def find_auditory(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –æ–∫–æ–ª–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å:") 
    await state.set_state(WaitForText.waiting_for_text)